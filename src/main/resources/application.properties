# ===============================
# ??  CONFIGURATION DE LA BASE MYSQL
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3306/rentalsdb?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username={DB_USER}
spring.datasource.password={DB_PASSWORD}

# JPA / Hibernate
# important pour ne pas que Hibernate ï¿½crase les tables
#spring.jpa.hibernate.ddl-auto=none

# ===============================
# ?  INITIALISATION DU SCHEMA ET DES DONNï¿½ES
# ===============================
# Recree les tables  chaque demarrage (utile en dev)
spring.jpa.hibernate.ddl-auto=create

# Execute automatiquement schema.sql et data.sql apres la creation du schema
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8

# Important : eviter que Hibernate n?interfere avec schema.sql
spring.jpa.defer-datasource-initialization=true

# ===============================
#   CONFIGURATION HIBERNATE
# ===============================
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# ===============================
#   JWT (exemple)
# ===============================
jwt.secret=Wm9K4s+2zvA8xE6SzBnl2uN2Zs6yjP4qYoGBWqBzW0x1LB7Xc6Yh+R3XkQ9eMZL9
jwt.expirationMs=86400000

# ===============================
#   SERVER
# ===============================
server.port=3001
spring.application.name=rentals-api

# ? Dossier des uploads configurable
app.upload.dir=uploads
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

server.servlet.context-path=/api
